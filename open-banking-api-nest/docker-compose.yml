version: '3.8'

services:
  app:
    container_name: open-banking-app
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - PORT=3000
      - DB_HOST=db
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=senhasegura
      - DB_NAME=open_banking
      - CORS_ORIGIN=*
      - API_PREFIX=api/v1
    depends_on:
      db:
        condition: service_healthy
    networks:
      - banking-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/v1/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  db:
    container_name: open-banking-db
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: senhasegura
      POSTGRES_DB: open_banking
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - banking-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  pgadmin:
    container_name: open-banking-pgadmin
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin123
    ports:
      - "5050:80"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - banking-network
    restart: unless-stopped

volumes:
  postgres-data:

networks:
  banking-network:
    driver: bridge